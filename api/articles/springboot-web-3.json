{"title":"2. Gradle을 스프링 부트 프로젝트로 변경","uid":"18c39e99fd033dd5083bccdf6728bd02","slug":"springboot-web-3","date":"2021-06-10T00:46:49.000Z","updated":"2021-06-11T03:59:52.959Z","comments":true,"path":"api/articles/springboot-web-3.json","keywords":"Programming, JAVA, JS, Spring MVC/Boot, React","cover":"../images/main.png","content":"<p>이번 포스트에서는 작성한 프로젝트를 스프링 부트 프로젝트로 변경하는 방법을 설명합니다.<br>의존성 주입을 통해 gradle을 스프링 부트 프로젝트로 변경하도록 하겠습니다.</p>\n<h2 id=\"Gradle을-스프링-부트-프로젝트로-변경\"><a href=\"#Gradle을-스프링-부트-프로젝트로-변경\" class=\"headerlink\" title=\"Gradle을 스프링 부트 프로젝트로 변경\"></a>Gradle을 스프링 부트 프로젝트로 변경</h2><h3 id=\"2-1-“build-gradle”의-프로젝트의-플러그인-의존성-관리를-위한-설정-코드를-작성\"><a href=\"#2-1-“build-gradle”의-프로젝트의-플러그인-의존성-관리를-위한-설정-코드를-작성\" class=\"headerlink\" title=\"2-1 “build.gradle”의 프로젝트의 플러그인 의존성 관리를 위한 설정 코드를 작성\"></a>2-1 “build.gradle”의 프로젝트의 플러그인 의존성 관리를 위한 설정 코드를 작성</h3><p>우선 프로젝트 내에 위치한 build.gradle의 최상단에 의존성 관리를 위한 설정코드를 작성합니다.<br>코드를 작성하기 전에, 이 포스트에서는 <strong>책의 내용과 다른 방식으로 설정 코드를 작성 것</strong>을 미리 알려둡니다.<br>그럼 어떻게 다른지 살펴볼까요? 우선, 책에서는 아래와 같이 코드를 작성하고 있습니다.</p>\n<pre class=\"line-numbers language-gradle\" data-language=\"gradle\"><code class=\"language-gradle\">buildscript &#123;\n    ext &#123;\n        springBootVersion &#x3D; &#39;2.1.9.RELEASE&#39;\n    &#125;\n    repositories &#123;\n        mavenCentral()\n        jcenter()\n    &#125;\n    dependencies &#123;\n        classpath(&quot;org.springframework.boot:spring-boot-gradle-plugin:$&#123;springBootVersion&#125;&quot;)\n    &#125;\n&#125;\n\napply plugin: &#39;java&#39;\napply plugin: &#39;eclipse&#39;\napply plugin: &#39;org.springframework.boot&#39;\napply plugin: &#39;io.spring.dependency-management&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>위와 같이 작성하던 도중, gradle.build에 자동으로 생성되어있던 <code>plugins &#123; id &quot;java&quot;&#125;</code>가 눈에 들어왔습니다.</p>\n<p>[그림2-1] 신경쓰이는 존재, plugins { id “java”}<br><img src=\"./springboot-web-3/1-plugins.png\" alt=\"plugins { id &quot;java&quot;}\"></p>\n<p>위에서 작성한 코드에서 <code>apply plugin</code>과 닮은 모습에 혹시 <em>apply plugin을 모아서 사용할 수 있는 건 아닐까</em> 하는 의심이 들었고, 자세한 사항을 알기 위해 검색하게 되었습니다. 검색해보니 <code>plugins &#123;&#125;</code> 은 gradle이 업데이트 되면서 변경된 사항으로 “plugins block”라 불리며, 플러그인을 추가하고, 선택적인 매개변수를 사용하여 적용 시기를 제어할 수 있다는 특징을 지닌다고 합니다.<a href=\"https://stackoverflow.com/questions/32352816/what-the-difference-in-applying-gradle-plugin\">(출처)</a></p>\n<p>이 업데이트로 위의 코드의 <code>buildscript&#123;&#125;</code>과 <code>apply plugins</code>는 아래와 같이  합쳐서 적는 것이 가능해졌습니다.</p>\n<pre class=\"line-numbers language-gradle\" data-language=\"gradle\"><code class=\"language-gradle\">plugins &#123;\n    id &quot;java&quot;\n    id &quot;eclipse&quot;\n    id &quot;org.springframework.boot&quot; version &quot;2.1.9.RELEASE&quot;\n    id &quot;io.spring.dependency-management&quot; version &quot;1.0.11.RELEASE&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://plugins.gradle.org/\">플러그인 정보는 이곳에서 확인 가능합니다.</a></p></blockquote>\n<p>훨씬 간편하고 보기 좋아졌습니다.<br><strong>이 4개의 플러그인은 자바와 스프링 부트를 사용하기 위해 반드시 추가해야함을 잊지 말아주세요!</strong><br>그럼, gradle을 마저 추가해봅시다.</p>\n<h3 id=\"2-2-dependencies에-개발에-필요한-의존성들을-선언\"><a href=\"#2-2-dependencies에-개발에-필요한-의존성들을-선언\" class=\"headerlink\" title=\"2-2 dependencies에 개발에 필요한 의존성들을 선언\"></a>2-2 dependencies에 개발에 필요한 의존성들을 선언</h3><p>dependencies에 개발에 필요한 의존성들을 선언합니다.<br>책에서는 compile을 사용하였으나, 여기서는 implementation을 사용합니다.<br>implementation을 사용하는 이유가 몇 가지 있습니다만, 가장 큰 이유는 compile이 gradle7+ 버전에서 삭제되었다는 것입니다.<br>그 외에도 이유는 많지만, 이 포스트는 프로젝트 생성을 위한 자리이니 자세한건 다음에 다루어보겠습니다.<br>혹시, 이 사항에 관심있으신 분을 위해 아래의 포스트 주소를 남기니 확인해보시길 바랍니다.</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://tomgregory.com/gradle-implementation-vs-compile-dependencies/\">Gradle implementation vs. compile dependencies</a></p></blockquote>\n<p>그럼, build.gradle의 dependencies에 다음의 의존성을 추가해봅시다.</p>\n<pre class=\"line-numbers language-gradle\" data-language=\"gradle\"><code class=\"language-gradle\">dependencies &#123;\n    implementation group: &#39;org.springframework.boot&#39;, name: &#39;spring-boot-starter-web&#39;, version: &#39;2.4.5&#39;\n    testImplementation group: &#39;org.springframework.boot&#39;, name: &#39;spring-boot-starter-test&#39;, version: &#39;2.4.5&#39;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-3-자바의-버전을-1-8로-설정해줍니다\"><a href=\"#2-3-자바의-버전을-1-8로-설정해줍니다\" class=\"headerlink\" title=\"2-3 자바의 버전을 1.8로 설정해줍니다.\"></a>2-3 자바의 버전을 1.8로 설정해줍니다.</h3><p>이제 자바 소스 코드의 버전을 1.8로 설정해보겠습니다. 참고로, 제 컴퓨터에 설치되어있는 JDK는 13입니다.<br>그럼에도 불구하고 1.8로 설정하는 이유는 책과의 환경 차이에서 생기는 오류를 줄이기 위함입니다.<br>책에서는 <code>스프링 부트 2.1.9.RELEASE 버전을 사용하며 gradle은 4.8~4.10 버전</code>을 사용하고 있습니다.<br>JDK 13은 <code>스프링 부트 2.2.x 버전 이상, gradle은 6버전 이상만이 지원</code>하기 때문에 스프링 부트의 버전업이 불가피합니다.<br>스프링 부트의 버전업으로 인해 어떤 오류가 생길지 모르니 초반에는 JDK 1.8로 프로젝트를 진행하고, 후에 기회가 된다면 스프링 부트 업그레이드 후 13으로 변경하여 작업해보도록 하겠습니다.<br>그럼, version아래에 다음과 같은 코드를 추가해주세요.</p>\n<pre class=\"line-numbers language-gradle\" data-language=\"gradle\"><code class=\"language-gradle\">sourceCompatibility &#x3D; 1.8<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>이 코드는 자바 소스 코드의 버전을 의미합니다.</p>\n<h3 id=\"2-4-build-gradle\"><a href=\"#2-4-build-gradle\" class=\"headerlink\" title=\"2-4 build.gradle\"></a>2-4 build.gradle</h3><p>작성이 완료된 build.gradle의 전체 코드는 아래와 같습니다.</p>\n<pre class=\"line-numbers language-gradle\" data-language=\"gradle\"><code class=\"language-gradle\">plugins &#123;\n    id &quot;java&quot;\n    id &quot;eclipse&quot;\n    id &quot;org.springframework.boot&quot; version &quot;2.1.9.RELEASE&quot;\n    id &quot;io.spring.dependency-management&quot; version &quot;1.0.11.RELEASE&quot;\n&#125;\n\ngroup &#39;com.dev.latte&#39;\nversion &#39;1.0-SNAPSHOT&#39;\nsourceCompatibility &#x3D; 1.8\n\nrepositories &#123;\n    mavenCentral()\n&#125;\n\ndependencies &#123;\n    implementation group: &#39;org.springframework.boot&#39;, name: &#39;spring-boot-starter-web&#39;, version: &#39;2.4.5&#39;\n    testImplementation group: &#39;org.springframework.boot&#39;, name: &#39;spring-boot-starter-test&#39;, version: &#39;2.4.5&#39;\n&#125;\n\ntest &#123;\n    useJUnitPlatform()\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-5-Gradle-반영하기\"><a href=\"#2-5-Gradle-반영하기\" class=\"headerlink\" title=\"2-5 Gradle 반영하기\"></a>2-5 Gradle 반영하기</h3><p>그레이들 작성이 완료되었다면, 인텔리제이 상단에 있는 Reload 버튼(순환마크)을 클릭하여 그레이들을 반영합니다.</p>\n<p>[그림2-2] gradle import<br><img src=\"./springboot-web-3/2-gradle_import.png\" alt=\"gradle import\"></p>\n<p>버튼을 클릭하면, 인텔리제이 하단에 그레이들의 반영 상황이 표시되고, 반영이 끝나면 <code>Gradle sync finished</code>가 표시됩니다.</p>\n<p><strong>이제 스프링 부트 프로젝트의 기본 셋팅이 완료되었습니다!</strong>  </p>\n<p>다음 포스트에서는 프로젝트의 설정이 제대로 되었는지 확인해보도록 하겠습니다.</p>\n","feature":true,"text":"이번 포스트에서는 작성한 프로젝트를 스프링 부트 프로젝트로 변경하는 방법을 설명합니다.의존성 주입을 통해 gradle을 스프링 부트 프로젝트로 변경하도록 하겠습니다. Gradle을 스프링 부트 프로젝트로 변경2-1 “build.gradle”의 프로젝트...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"스프링 부트와 AWS로 혼자 구현하는 웹 서비스","slug":"스프링-부트와-AWS로-혼자-구현하는-웹-서비스","count":4,"path":"api/categories/스프링-부트와-AWS로-혼자-구현하는-웹-서비스.json"}],"tags":[{"name":"springBoot","slug":"springBoot","count":4,"path":"api/tags/springBoot.json"},{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"},{"name":"gradle","slug":"gradle","count":3,"path":"api/tags/gradle.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Gradle%EC%9D%84-%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%A1%9C-%EB%B3%80%EA%B2%BD\"><span class=\"toc-text\">Gradle을 스프링 부트 프로젝트로 변경</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E2%80%9Cbuild-gradle%E2%80%9D%EC%9D%98-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%9D%98-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%84%A4%EC%A0%95-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%91%EC%84%B1\"><span class=\"toc-text\">2-1 “build.gradle”의 프로젝트의 플러그인 의존성 관리를 위한 설정 코드를 작성</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-dependencies%EC%97%90-%EA%B0%9C%EB%B0%9C%EC%97%90-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%98%EC%A1%B4%EC%84%B1%EB%93%A4%EC%9D%84-%EC%84%A0%EC%96%B8\"><span class=\"toc-text\">2-2 dependencies에 개발에 필요한 의존성들을 선언</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%EC%9E%90%EB%B0%94%EC%9D%98-%EB%B2%84%EC%A0%84%EC%9D%84-1-8%EB%A1%9C-%EC%84%A4%EC%A0%95%ED%95%B4%EC%A4%8D%EB%8B%88%EB%8B%A4\"><span class=\"toc-text\">2-3 자바의 버전을 1.8로 설정해줍니다.</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-build-gradle\"><span class=\"toc-text\">2-4 build.gradle</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-Gradle-%EB%B0%98%EC%98%81%ED%95%98%EA%B8%B0\"><span class=\"toc-text\">2-5 Gradle 반영하기</span></a></li></ol></li></ol>","author":{"name":"Latte","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"최근에는 바닐라 라떼가 가장 좋습니다.","socials":{"github":"https://github.com/dev-latte","twitter":"https://twitter.com/dev_latte","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"mail":{"icon":"fas fa-envelope","link":null}}}},"mapped":true,"prev_post":{"title":"3. 프로젝트 설정 확인","uid":"1bc1fccedcb28371ce507abc90a2b06f","slug":"springboot-web-4","date":"2021-06-11T02:24:43.000Z","updated":"2021-06-11T04:00:37.410Z","comments":true,"path":"api/articles/springboot-web-4.json","keywords":"Programming, JAVA, JS, Spring MVC/Boot, React","cover":"../images/main.png","text":"이 포스트에서는 이전까지 작성한 프로젝트가 제대로 동작하는지 테스트하도록 하겠습니다.테스트코드를 작성하기 전에 기능테스트를 위한 간단한 API를 작성해보겠습니다. “hello”를 반환하는 GET method API 만들기3-1 패키지 생성프로젝트에서 ...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"스프링 부트와 AWS로 혼자 구현하는 웹 서비스","slug":"스프링-부트와-AWS로-혼자-구현하는-웹-서비스","count":4,"path":"api/categories/스프링-부트와-AWS로-혼자-구현하는-웹-서비스.json"}],"tags":[{"name":"springBoot","slug":"springBoot","count":4,"path":"api/tags/springBoot.json"},{"name":"java","slug":"java","count":1,"path":"api/tags/java.json"},{"name":"TDD","slug":"TDD","count":1,"path":"api/tags/TDD.json"}],"author":{"name":"Latte","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"최근에는 바닐라 라떼가 가장 좋습니다.","socials":{"github":"https://github.com/dev-latte","twitter":"https://twitter.com/dev_latte","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"mail":{"icon":"fas fa-envelope","link":null}}}},"feature":true},"next_post":{"title":"1. IntelliJ 프로젝트 생성","uid":"a01df8c8fb60fb63504058a17ab9f187","slug":"springboot-web-2","date":"2021-06-09T12:36:23.000Z","updated":"2021-06-11T03:59:26.142Z","comments":true,"path":"api/articles/springboot-web-2.json","keywords":"Programming, JAVA, JS, Spring MVC/Boot, React","cover":"../images/main.png","text":"이 포스트에서 IntelliJ의 설치는 다루고 있지 않습니다. IntelliJ의 설치는 다른 분의 블로그나 웹을 참고해주세요. IntelliJ IDEA - IntelliJ는 기본적으로 유료툴이지만 community버전은 무료로 이용 가능합니다. - 학...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"스프링 부트와 AWS로 혼자 구현하는 웹 서비스","slug":"스프링-부트와-AWS로-혼자-구현하는-웹-서비스","count":4,"path":"api/categories/스프링-부트와-AWS로-혼자-구현하는-웹-서비스.json"}],"tags":[{"name":"springBoot","slug":"springBoot","count":4,"path":"api/tags/springBoot.json"},{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"},{"name":"gradle","slug":"gradle","count":3,"path":"api/tags/gradle.json"}],"author":{"name":"Latte","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"최근에는 바닐라 라떼가 가장 좋습니다.","socials":{"github":"https://github.com/dev-latte","twitter":"https://twitter.com/dev_latte","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"mail":{"icon":"fas fa-envelope","link":null}}}},"feature":true}}