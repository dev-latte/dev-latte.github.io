{"title":"1. 자료 구조","uid":"a4c20de877725d90cf1ede9509e3fa58","slug":"cs-data-structure","date":"2021-06-23T05:05:59.000Z","updated":"2021-06-27T07:30:55.013Z","comments":true,"path":"api/articles/cs-data-structure.json","keywords":"Programming, JAVA, JS, Spring MVC/Boot, React","cover":"../images/computer_science.jpeg","content":"<p>오랜만에 집정리를 하던 도중, 정보처리기사 책을 발견했습니다.<br>자격증을 딴 이후로 방치된 책인데 오랜만에 열어보니 덜 풀은 문제가 있더군요.<br>문제를 다 푼 후에 버릴 심산으로 심심할 때마다 정보처리기사 문제를 풀게 되었습니다.<br>그런데 의외로 정리해두면 좋을 것 같은 문제가 많았는데 그 중에 하나가 자료 구조였습니다.<br>때문에 이 포스트에서는 자료 구조의 정의와 중요한 자료 구조 분류를 정리해보려 합니다.</p>\n<h3 id=\"자료구조-Data-Structure\"><a href=\"#자료구조-Data-Structure\" class=\"headerlink\" title=\"자료구조(Data Structure)\"></a>자료구조(Data Structure)</h3><h4 id=\"1-정의\"><a href=\"#1-정의\" class=\"headerlink\" title=\"1. 정의\"></a>1. 정의</h4><p>자료 구조(Data Structure)는 말 그대로 데이터를 담는 구조이자 데이터의 집합을 의미합니다. 여기서 각 원소들은 논리적으로 정의된 규칙에 의해 나열되며, 자료를 효율적으로 처리할 수 있도록 구분하여 표현됩니다.<br>이러한 자료구조는 <strong>프로그램 내에서 데이터를 가장 효율적으로 저장하고 처리하기 위해 사용되며, 잘 선택된 자료 구조는 보다 좋은 성능을 발휘</strong>합니다.</p>\n<p>자료 구조의 종류는 다양하고, 각각의 자료 구조는 각자의 연산 및 목적에 맞게 구성되어 있습니다.<br>때문에 그 특징을 알고 각자에 맞는 알고리즘을 사용하는 것이 매우 중요합니다.</p>\n<h4 id=\"2-자료-구조의-분류\"><a href=\"#2-자료-구조의-분류\" class=\"headerlink\" title=\"2.  자료 구조의 분류\"></a>2.  자료 구조의 분류</h4><h5 id=\"2-1-단순-구조-Simple-Structure\"><a href=\"#2-1-단순-구조-Simple-Structure\" class=\"headerlink\" title=\"2-1. 단순 구조(Simple Structure)\"></a>2-1. 단순 구조(Simple Structure)</h5><p>단순 구조는 컴퓨터가 기본적으로 제공하는 자료형을 의미합니다.</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">단순 구조 종류</p>\n<ul>\n<li>true, false (boolean)</li>\n<li>int, long, float, double</li>\n<li>char, String</li>\n</ul>\n\n</div>\n<h5 id=\"2-2-선형-구조-Linear-Structure\"><a href=\"#2-2-선형-구조-Linear-Structure\" class=\"headerlink\" title=\"2-2. 선형 구조(Linear Structure)\"></a>2-2. 선형 구조(Linear Structure)</h5><p>선형 구조는 데이터들이 일렬로 정렬되어 저장된 상태를 의미합니다.<br>이 자료 구조는 <strong>단순히 일렬로 저장하는 방식(스택과 큐도 포함)</strong> 과 각 데이터가 <strong>다음 데이터의 위치를 가지는 연결 리스트 방식</strong>으로 구분됩니다.</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">선형 구조 종류</p>\n<p><ul>\n<li>Array</li>\n<li>Stack</li>\n<li>Queue</li>\n<li>De-Queue</li>\n<li>Linked List</li>\n</ul>\n</p>\n</div>\n<h5 id=\"2-3-비선형-구조-Non-Linear-Structure\"><a href=\"#2-3-비선형-구조-Non-Linear-Structure\" class=\"headerlink\" title=\"2-3. 비선형 구조(Non-Linear Structure)\"></a>2-3. 비선형 구조(Non-Linear Structure)</h5><p>데이터가 트리형태로 저장되어 있다고 생각하고 사용하는 자료구조이며 자료의 표현에 중점을 두고 있습니다.<br>자료의 순서가 불규칙하고, 자료의 관계가 1:N의 관계를 갖는 등 관계가 복잡하거나 계층을 갖는 경우 주로 사용됩니다.</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">비선형 구조 종류</p>\n<ul>\n<li>Tree - General Tree(일반 트리) / Binary Tree(이진 트리)</li>\n<li>Graph - Directed Graph(방향 그래프) / Undirected Graph(무방향 그래프)</li>\n</ul>\n\n</div>\n<h5 id=\"2-4-파일-구조-File-Structure\"><a href=\"#2-4-파일-구조-File-Structure\" class=\"headerlink\" title=\"2-4. 파일 구조(File Structure)\"></a>2-4. 파일 구조(File Structure)</h5><p>파일을 구성하는 레코드들이 보조 기억 장치에 저장되는 방식을 의미합니다.<br>파일 편성 방법에 따라 파일 접근 방법을 분류할 수 있어서 <strong>파일 접근 방법</strong>이라고도 합니다.</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">파일 구조 종류</p>\n<p><ul>\n<li>Sequential File (순차 파일 / 순서 파일)</li>\n<li>Indexed Sequential File(색인 순차 파일 / <strong>ISAM</strong>;Index Sequential Access Method)</li>\n<li>Direct File(직접 파일 / <strong>DAM</strong>;Direct Access Method)</li>\n</ul>\n</p>\n</div>\n<hr>\n<p>여기까지, 자료 구조의 정의 및 분류를 알아보았습니다.<br>앞으로 정리할 자료 구조의 종류는 <strong>선형 구조</strong>와 <strong>비선형 구조</strong> 위주로 정리될 예정입니다.<br>그 이유는 이 두 개의 자료 구조는 알고리즘에서 제일 중요하게 다뤄지는 자료 구조이기 때문입니다.<br>그럼, 자료 구조의 종류와 특징에 대해서는 다음 포스트에서 진행하도록 하겠습니다.</p>\n<hr>\n<p>출처<br><a href=\"https://andrew0409.tistory.com/148\">블로그 - 자료구조 : 자료구조란? (Data Structure)</a><br><a href=\"https://velog.io/@filoscoder/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%EC%A2%85%EB%A5%98%EC%99%80-%EB%B6%84%EB%A5%98\">블로그 - [Data structure] 자료구조 종류와 분류</a></p>\n","feature":true,"text":"오랜만에 집정리를 하던 도중, 정보처리기사 책을 발견했습니다.자격증을 딴 이후로 방치된 책인데 오랜만에 열어보니 덜 풀은 문제가 있더군요.문제를 다 푼 후에 버릴 심산으로 심심할 때마다 정보처리기사 문제를 풀게 되었습니다.그런데 의외로 정리해두면 좋을...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Computer Science","slug":"Computer-Science","count":3,"path":"api/categories/Computer-Science.json"}],"tags":[{"name":"Computer Science","slug":"Computer-Science","count":1,"path":"api/tags/Computer-Science.json"},{"name":"Data Structure","slug":"Data-Structure","count":1,"path":"api/tags/Data-Structure.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-Data-Structure\"><span class=\"toc-text\">자료구조(Data Structure)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%EC%A0%95%EC%9D%98\"><span class=\"toc-text\">1. 정의</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%EC%9E%90%EB%A3%8C-%EA%B5%AC%EC%A1%B0%EC%9D%98-%EB%B6%84%EB%A5%98\"><span class=\"toc-text\">2.  자료 구조의 분류</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-1-%EB%8B%A8%EC%88%9C-%EA%B5%AC%EC%A1%B0-Simple-Structure\"><span class=\"toc-text\">2-1. 단순 구조(Simple Structure)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-%EC%84%A0%ED%98%95-%EA%B5%AC%EC%A1%B0-Linear-Structure\"><span class=\"toc-text\">2-2. 선형 구조(Linear Structure)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-3-%EB%B9%84%EC%84%A0%ED%98%95-%EA%B5%AC%EC%A1%B0-Non-Linear-Structure\"><span class=\"toc-text\">2-3. 비선형 구조(Non-Linear Structure)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-4-%ED%8C%8C%EC%9D%BC-%EA%B5%AC%EC%A1%B0-File-Structure\"><span class=\"toc-text\">2-4. 파일 구조(File Structure)</span></a></li></ol></li></ol></li></ol>","author":{"name":"Latte","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"최근에는 바닐라 라떼가 가장 좋습니다.","socials":{"github":"https://github.com/dev-latte","twitter":"https://twitter.com/dev_latte","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"mail":{"icon":"fas fa-envelope","link":null}}}},"mapped":true,"prev_post":{"title":"6. JPA, Hibernate, Spring Data JPA","uid":"d93904bd8ecb573f2b3f624285e3ea2a","slug":"springboot-web-7","date":"2021-06-23T07:43:58.000Z","updated":"2021-07-03T12:17:05.065Z","comments":true,"path":"api/articles/springboot-web-7.json","keywords":"Programming, JAVA, JS, Spring MVC/Boot, React","cover":"../images/main.png","text":"과거에 스프링 프로젝트를 진행할 때에는 오라클 DB에 Mybatis를 사용했었습니다.때문에 이 책에서도 데이터베이스를 다루는 SQL mapper를 Mybatis로 사용할 것이라 추측했습니다.그러나 이 책에서 데이터베이스는 JPA를 통해 관리됩니다. 여...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"스프링 부트와 AWS로 혼자 구현하는 웹 서비스","slug":"스프링-부트와-AWS로-혼자-구현하는-웹-서비스","count":10,"path":"api/categories/스프링-부트와-AWS로-혼자-구현하는-웹-서비스.json"}],"tags":[{"name":"springBoot","slug":"springBoot","count":10,"path":"api/tags/springBoot.json"},{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"JPA","slug":"JPA","count":3,"path":"api/tags/JPA.json"}],"author":{"name":"Latte","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"최근에는 바닐라 라떼가 가장 좋습니다.","socials":{"github":"https://github.com/dev-latte","twitter":"https://twitter.com/dev_latte","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"mail":{"icon":"fas fa-envelope","link":null}}}},"feature":true},"next_post":{"title":"3. 구현(Implementation)","uid":"de3f69ccc161905f5bded0c2342c2211","slug":"algorithm-implementation","date":"2021-06-17T06:09:51.000Z","updated":"2021-06-27T05:30:21.036Z","comments":true,"path":"api/articles/algorithm-implementation.json","keywords":"Programming, JAVA, JS, Spring MVC/Boot, React","cover":"../images/algorithm.jpeg","text":"친구들과 알고리즘 공부를 하면서 “이해는 했는데 코드로 짜기가 힘들다”라는 말을 하곤 했습니다.그때는 알고리즘은 원리만 알면 풀 수 있는거 아니야? 하는 생각도 있었는데, 지금 생각해보니 정말 얼토당토않은 말이었죠.알고리즘이 중요하게 다뤄지는 이유는 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"알고리즘","slug":"알고리즘","count":3,"path":"api/categories/알고리즘.json"}],"tags":[{"name":"algorithm","slug":"algorithm","count":4,"path":"api/tags/algorithm.json"},{"name":"Implementation","slug":"Implementation","count":1,"path":"api/tags/Implementation.json"}],"author":{"name":"Latte","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"최근에는 바닐라 라떼가 가장 좋습니다.","socials":{"github":"https://github.com/dev-latte","twitter":"https://twitter.com/dev_latte","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"mail":{"icon":"fas fa-envelope","link":null}}}},"feature":true}}