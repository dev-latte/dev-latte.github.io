{"title":"3. 비선형구조 - 그래프(Graph)","uid":"20b86973dc8825e5a6ade1bddd196184","slug":"cs-graph","date":"2021-07-11T07:24:05.000Z","updated":"2021-07-11T08:13:33.880Z","comments":true,"path":"api/articles/cs-graph.json","keywords":"Programming, JAVA, JS, Spring MVC/Boot, React","cover":"../images/computer_science.jpeg","content":"<p>이번 포스트는 비선형구조 중 하나인 그래프(Graph)에 대해 정리해보도록하겠습니다.</p>\n<h3 id=\"비선형구조-그래프-Graph\"><a href=\"#비선형구조-그래프-Graph\" class=\"headerlink\" title=\"비선형구조 - 그래프(Graph)\"></a>비선형구조 - 그래프(Graph)</h3><p>그래프(Graph)는 <strong>정점(vertex)과 간선(edge)으로 이루어진 자료구조</strong>이자 <strong>연결되어 있는 데이터 간의 관계를 표현</strong>하기 위한 자료구조 입니다. 대표적인 그래프로는 최단 경로를 찾기 위한 지도에서의 최단 경로, 지하철 노선도, 회로 구조 등이 있습니다. 트리(Tree) 구조도 그래프의 특수한 형태입니다.</p>\n<p>[그림3-1] 그래프의 예<br><img src=\"./cs-graph/1-graph.png\" alt=\"그래프의 예\"> </p>\n<p>이 그래프가 G1이라는 이름일 때에 다음과 같이 표기할 수 있습니다.</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">그래프 표기의 예</p>\n<p><ul>\n<li>V(G1) = {A, B, C , D}   </li>\n<li>E(G1) = {(A, B), (B, C), (C, D), (B, D), (A, C)}</li>\n</ul>\n</p>\n</div>\n<h4 id=\"3-1-그래프의-주요-용어\"><a href=\"#3-1-그래프의-주요-용어\" class=\"headerlink\" title=\"3-1 그래프의 주요 용어\"></a>3-1 그래프의 주요 용어</h4><table>\n<thead>\n<tr>\n<th align=\"left\">용어</th>\n<th align=\"left\">내용</th>\n<th align=\"left\">비고</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><strong>정점(Vertex)</strong></td>\n<td align=\"left\">그래프의 구성요소로 특성을 가질 수 있는 객체를 의미.</td>\n<td align=\"left\">노드(Node)라고도 불림</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>간선(Edge)</strong></td>\n<td align=\"left\">정점(Vertex)간 연결 관계.</td>\n<td align=\"left\">링크(Link)라고도 불림</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>가중치(Weight)</strong></td>\n<td align=\"left\">간선(Edge)의 비용이나 가중치가 가 있는 경우. 가중치값</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\"><strong>인접 정점(Adjacent-Vertex)</strong></td>\n<td align=\"left\">간선(Edge)에 의해 연결된 정점.</td>\n<td align=\"left\">[그림3-1]에서 정점A와 정점 B는 인접 정점이다</td>\n</tr>\n<tr>\n<td align=\"left\">단순 경로(Simple-Path)</td>\n<td align=\"left\">경로 중 반복되는 정점이 없는 것. 같은 간선을 지나가지 않는 경로</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">차수(Degree)</td>\n<td align=\"left\">무방향 그래프에서 하나의 정점에 인접한 정점의 수.</td>\n<td align=\"left\">[그림3-1]에서 정점B의 차수는 3이다</td>\n</tr>\n<tr>\n<td align=\"left\">진출 차수(Out-Degree)</td>\n<td align=\"left\">방향그래프에서 사용되는 용어로 한 노드에서 외부로 향하는 간선의 수</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">진입 차수(In-Degree)</td>\n<td align=\"left\">방향그래프에서 사용되는 용어로 외부 노드에서 들어오는 간선의 수</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<h4 id=\"3-2-그래프의-종류\"><a href=\"#3-2-그래프의-종류\" class=\"headerlink\" title=\"3-2 그래프의 종류\"></a>3-2 그래프의 종류</h4><h5 id=\"3-2-1-무방향-그래프-Undirected-Graph\"><a href=\"#3-2-1-무방향-그래프-Undirected-Graph\" class=\"headerlink\" title=\"3-2-1 무방향 그래프(Undirected Graph)\"></a>3-2-1 무방향 그래프(Undirected Graph)</h5><p>[그림3-2] 무방향 그래프<br><img src=\"./cs-graph/2-undirected_graph.png\" alt=\"무방향 그래프\">  </p>\n<ul>\n<li>무방향 간선(undirected edge)만을 사용합니다.  </li>\n<li>방향이 정해져있지 않으므로, 간선을 통해서 양방향으로 이동이 가능합니다.    </li>\n<li><strong>(A, B)</strong> 와 같이 표기하며 이는 A와 B 사이의 간선을 의미합니다.    </li>\n<li><code>(A, B) = (B, A)</code>이 성립합니다.</li>\n</ul>\n<h5 id=\"3-2-2-방향그래프-Directed-Graph\"><a href=\"#3-2-2-방향그래프-Directed-Graph\" class=\"headerlink\" title=\"3-2-2 방향그래프(Directed Graph)\"></a>3-2-2 방향그래프(Directed Graph)</h5><p>[그림3-3] 방향 그래프<br><img src=\"./cs-graph/3-directed_graph.png\" alt=\"방향 그래프\">  </p>\n<ul>\n<li>방향 간선(directed edge)만을 사용합니다.  </li>\n<li>간선을 통해서 <strong>한쪽 방향</strong>으로만 갈 수 있습니다.  </li>\n<li><strong>&lt;A, B&gt;</strong> 와 같이 표기하며 이는 A에서 B로 가는 간선을 의미합니다.  </li>\n<li><code>&lt;A, B&gt; ≠ &lt;B, A&gt;</code>이 성립합니다.</li>\n</ul>\n<h5 id=\"3-2-3-가중치-그래프-Weighted-Graph\"><a href=\"#3-2-3-가중치-그래프-Weighted-Graph\" class=\"headerlink\" title=\"3-2-3 가중치 그래프(Weighted Graph)\"></a>3-2-3 가중치 그래프(Weighted Graph)</h5><p>[그림3-4] 가중치 그래프<br><img src=\"./cs-graph/4-weighted_graph.png\" alt=\"가중치 그래프\">  </p>\n<ul>\n<li>가중그래프 중 방향 그래프를 네트워크 그래프(Network Graph)라고도 부릅니다.  </li>\n<li><strong>간선에 비용(cost)이나 가중치(weight)가 할당된 그래프</strong>입니다.  </li>\n<li>가중치는 <strong>양수와 음수</strong> 모두를 가질 수 있습니다.  </li>\n<li>최단 경로 문제와 관련 있으며 이는 가중치의 합이 최소가 되는 경로를 구하는 문제입니다.   </li>\n<li>경우에 따라 문제를 해결하는 알고리즘이 서로 다릅니다.  </li>\n</ul>\n<h5 id=\"3-2-4-루트없는-트리-Unrooted-Tree\"><a href=\"#3-2-4-루트없는-트리-Unrooted-Tree\" class=\"headerlink\" title=\"3-2-4 루트없는 트리(Unrooted Tree)\"></a>3-2-4 루트없는 트리(Unrooted Tree)</h5><p>[그림3-5] 루트없는 트리<br><img src=\"./cs-graph/5-unrooted_tree.png\" alt=\"루트없는 트리\">  </p>\n<ul>\n<li>서로 다른 두 정점을 잇는 방법이 한 가지인 그래프입니다.  </li>\n<li>트리의 정의와 유사하나 <strong>루트가 없습니다</strong>.</li>\n</ul>\n<h5 id=\"3-2-5-이분-그래프-Bipartite-Graph\"><a href=\"#3-2-5-이분-그래프-Bipartite-Graph\" class=\"headerlink\" title=\"3-2-5 이분 그래프(Bipartite Graph)\"></a>3-2-5 이분 그래프(Bipartite Graph)</h5><p>[그림3-6] 이분 그래프<br><img src=\"./cs-graph/6-bipartite_graph.png\" alt=\"이분 그래프\">  </p>\n<ul>\n<li>그래프의 정점을 겹치지 않게 두 그룹으로 나눈 후, 다른 그룹끼리만 간선이 존재하도록 분할하는 그래프입니다.  </li>\n<li>홀수 길이의 순환 그래프는 이분 그래프가 될 수 없습니다.</li>\n</ul>\n<h5 id=\"3-2-6-사이클이-없는-방향-그래프-DAG-Directed-Acycleic-Graph\"><a href=\"#3-2-6-사이클이-없는-방향-그래프-DAG-Directed-Acycleic-Graph\" class=\"headerlink\" title=\"3-2-6 사이클이 없는 방향 그래프(DAG;Directed Acycleic Graph)\"></a>3-2-6 사이클이 없는 방향 그래프(DAG;Directed Acycleic Graph)</h5><p>[그림3-7] 사이클이 없는 방향 그래프<br><img src=\"./cs-graph/7-DAG.png\" alt=\"사이클이 없는 방향 그래프\">  </p>\n<ul>\n<li>정점에서 출발해 자기자신으로 돌아오는 경로(사이클)가 없는  그래프 입니다.  </li>\n<li>어느 경로에서도 자기 자신으로 돌아올 수 없습니다.  </li>\n<li>위상정렬이 있는 방향 그래프입니다.  </li>\n</ul>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">위상정렬(Topological Sorting)</p>\n<p>위상 정렬(Topological Sorting)은 유향 그래프(방향 그래프)의 꼭짓점들(vertex)을 변의 방향을 거스르지 않도록 나열하는 것을 의미한다.</p>\n\n</div>\n<h4 id=\"3-3-그래프의-구현-방법\"><a href=\"#3-3-그래프의-구현-방법\" class=\"headerlink\" title=\"3-3 그래프의 구현 방법\"></a>3-3 그래프의 구현 방법</h4><p>[그림3-8] 그래프 예시<br><img src=\"./cs-graph/8-example.png\" alt=\"그래프 예시\">  </p>\n<h5 id=\"3-3-1-인접-행렬-Adjacency-Materix-을-이용한-방법\"><a href=\"#3-3-1-인접-행렬-Adjacency-Materix-을-이용한-방법\" class=\"headerlink\" title=\"3-3-1 인접 행렬(Adjacency Materix)을 이용한 방법\"></a>3-3-1 인접 행렬(Adjacency Materix)을 이용한 방법</h5><ul>\n<li>그래프의 노드를 2차원 배열로 만든 것</li>\n<li>인접 정점이라면 1, 아니면 0을 넣습니다.</li>\n<li>[그림3-8] 그래프를 2차원 배열로 만들면 다음과 같습니다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">A</th>\n<th align=\"left\">B</th>\n<th align=\"left\">C</th>\n<th align=\"left\">D</th>\n<th align=\"left\">E</th>\n<th align=\"left\">F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">A</td>\n<td align=\"left\">0</td>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n</tr>\n<tr>\n<td align=\"left\">B</td>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n<td align=\"left\">1</td>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n</tr>\n<tr>\n<td align=\"left\">C</td>\n<td align=\"left\">0</td>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">D</td>\n<td align=\"left\">0</td>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n<td align=\"left\">1</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">E</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">F</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n<td align=\"left\">1</td>\n<td align=\"left\">1</td>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n</tr>\n</tbody></table>\n<ul>\n<li>인접 행렬의 장점과 단점은 다음과 같습니다.<table>\n<thead>\n<tr>\n<th align=\"left\">장점</th>\n<th align=\"left\">단점</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">두 점에 대한 연결정보 조회는 O(1)의 시간 복잡도면 가능</td>\n<td align=\"left\">모든 정점에 대한 간선 정보를 대입해야하므로 O(n²)의 시간복잡도가 소요됨</td>\n</tr>\n<tr>\n<td align=\"left\">구현이 비교적 간단함</td>\n<td align=\"left\">무조건 2차원 배열이 필요하기 때문에 필요 이상의 공간이 낭비됨</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h5 id=\"3-3-2-인접-리스트-Adjacency-List-를-이용한-방법\"><a href=\"#3-3-2-인접-리스트-Adjacency-List-를-이용한-방법\" class=\"headerlink\" title=\"3-3-2 인접 리스트(Adjacency List)를 이용한 방법\"></a>3-3-2 인접 리스트(Adjacency List)를 이용한 방법</h5><ul>\n<li>그래프의 노드들을 리스트로 표현한 것.  </li>\n<li>주로 정점의 리스트 배열을 만들어 관계를 설정해줌으로써 구현합니다.  </li>\n<li>[그림3-8] 그래프를 리스트로 표현하면 다음과 같습니다.</li>\n</ul>\n<p><img src=\"./cs-graph/9-adjacency_list.png\" alt=\"인접리스트 예시\">  </p>\n<ul>\n<li>인접리스트의 장점과 단점은 다음과 같습니다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">장점</th>\n<th align=\"left\">단점</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">정점들의 연결 정보를 탐색할때 O(n)의 시간이면 가능 (n은 간선의 개수)</td>\n<td align=\"left\">배열보다 검색 속도가 느립니다.</td>\n</tr>\n<tr>\n<td align=\"left\">인접행렬과 비교했을 때, 공간의 낭비가 적습니다.</td>\n<td align=\"left\">구현이 비교적 어렵습니다.</td>\n</tr>\n</tbody></table>\n<hr>\n<p>이번 포스트에서는 비선형구조 중 하나인 그래프를 배워보았습니다.<br>그래프는 탐색 알고리즘, 그리고 다양한 경로를 찾는 알고리즘에 사용되는 자료구조입니다.<br>잘 알아두면 알고리즘 테스트뿐만 아니라 현업에서도 도움이 될 것이라 생각합니다.<br>(아직 머리 속에서 정리가 덜 되어 잘못된 부분이 존재할 수 있습니다. 이 부분 참고해주세요.) </p>\n<hr>\n<p><strong>레퍼런스</strong></p>\n<ol>\n<li><a href=\"https://laboputer.github.io/ps/2017/09/29/graph/\">[자료구조 1] 그래프(Graph) 이해하기</a>  </li>\n<li><a href=\"https://coding-factory.tistory.com/610\">[Algorithm] 자료구조 그래프(Graph)란 무엇인가?</a>  </li>\n<li><a href=\"https://slidesplayer.org/amp/16678233/\">Chap 10 : 그래프</a>  </li>\n<li><a href=\"https://ko.wikipedia.org/wiki/%EA%B0%80%EC%A4%91_%EA%B7%B8%EB%9E%98%ED%94%84\">위키피디아:가중그래프</a>  </li>\n<li><a href=\"https://luv-n-interest.tistory.com/202\">[C언어]자료구조-가중치 그래프 Weighted Graph + Kruscal - 1</a></li>\n</ol>\n","feature":true,"text":"이번 포스트는 비선형구조 중 하나인 그래프(Graph)에 대해 정리해보도록하겠습니다. 비선형구조 - 그래프(Graph)그래프(Graph)는 정점(vertex)과 간선(edge)으로 이루어진 자료구조이자 연결되어 있는 데이터 간의 관계를 표현하기 위한 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Computer Science","slug":"Computer-Science","count":3,"path":"api/categories/Computer-Science.json"}],"tags":[{"name":"Nonlinear structure","slug":"Nonlinear-structure","count":1,"path":"api/tags/Nonlinear-structure.json"},{"name":"Graph","slug":"Graph","count":1,"path":"api/tags/Graph.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EB%B9%84%EC%84%A0%ED%98%95%EA%B5%AC%EC%A1%B0-%EA%B7%B8%EB%9E%98%ED%94%84-Graph\"><span class=\"toc-text\">비선형구조 - 그래프(Graph)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-%EA%B7%B8%EB%9E%98%ED%94%84%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%9A%A9%EC%96%B4\"><span class=\"toc-text\">3-1 그래프의 주요 용어</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-%EA%B7%B8%EB%9E%98%ED%94%84%EC%9D%98-%EC%A2%85%EB%A5%98\"><span class=\"toc-text\">3-2 그래프의 종류</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-2-1-%EB%AC%B4%EB%B0%A9%ED%96%A5-%EA%B7%B8%EB%9E%98%ED%94%84-Undirected-Graph\"><span class=\"toc-text\">3-2-1 무방향 그래프(Undirected Graph)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-2-2-%EB%B0%A9%ED%96%A5%EA%B7%B8%EB%9E%98%ED%94%84-Directed-Graph\"><span class=\"toc-text\">3-2-2 방향그래프(Directed Graph)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-2-3-%EA%B0%80%EC%A4%91%EC%B9%98-%EA%B7%B8%EB%9E%98%ED%94%84-Weighted-Graph\"><span class=\"toc-text\">3-2-3 가중치 그래프(Weighted Graph)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-2-4-%EB%A3%A8%ED%8A%B8%EC%97%86%EB%8A%94-%ED%8A%B8%EB%A6%AC-Unrooted-Tree\"><span class=\"toc-text\">3-2-4 루트없는 트리(Unrooted Tree)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-2-5-%EC%9D%B4%EB%B6%84-%EA%B7%B8%EB%9E%98%ED%94%84-Bipartite-Graph\"><span class=\"toc-text\">3-2-5 이분 그래프(Bipartite Graph)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-2-6-%EC%82%AC%EC%9D%B4%ED%81%B4%EC%9D%B4-%EC%97%86%EB%8A%94-%EB%B0%A9%ED%96%A5-%EA%B7%B8%EB%9E%98%ED%94%84-DAG-Directed-Acycleic-Graph\"><span class=\"toc-text\">3-2-6 사이클이 없는 방향 그래프(DAG;Directed Acycleic Graph)</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-%EA%B7%B8%EB%9E%98%ED%94%84%EC%9D%98-%EA%B5%AC%ED%98%84-%EB%B0%A9%EB%B2%95\"><span class=\"toc-text\">3-3 그래프의 구현 방법</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-3-1-%EC%9D%B8%EC%A0%91-%ED%96%89%EB%A0%AC-Adjacency-Materix-%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B0%A9%EB%B2%95\"><span class=\"toc-text\">3-3-1 인접 행렬(Adjacency Materix)을 이용한 방법</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-3-2-%EC%9D%B8%EC%A0%91-%EB%A6%AC%EC%8A%A4%ED%8A%B8-Adjacency-List-%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B0%A9%EB%B2%95\"><span class=\"toc-text\">3-3-2 인접 리스트(Adjacency List)를 이용한 방법</span></a></li></ol></li></ol></li></ol>","author":{"name":"Latte","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"최근에는 바닐라 라떼가 가장 좋습니다.","socials":{"github":"https://github.com/dev-latte","twitter":"https://twitter.com/dev_latte","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"mail":{"icon":"fas fa-envelope","link":null}}}},"mapped":true,"prev_post":{"title":"4. 재귀 함수(Recursive Function)","uid":"9ed3a98723cc8a223c9fd2c456508919","slug":"algorithm-recursive-function","date":"2021-07-15T02:00:06.000Z","updated":"2021-07-15T04:23:37.944Z","comments":true,"path":"api/articles/algorithm-recursive-function.json","keywords":"Programming, JAVA, JS, Spring MVC/Boot, React","cover":"../images/algorithm.jpeg","text":"DFS(Depth-First Srarch) 및 BFS(Breadth First Search)에 대해 정리하다보니, 이를 이해하기 위해서는 그래프, 스택, 재귀 함수에 대한 이해가 필요하다는 것을 알게 되었습니다. 그래프와 스택은 이전에 정리해두었으니,...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"알고리즘","slug":"알고리즘","count":4,"path":"api/categories/알고리즘.json"}],"tags":[{"name":"algorithm","slug":"algorithm","count":5,"path":"api/tags/algorithm.json"},{"name":"Recursive Function","slug":"Recursive-Function","count":1,"path":"api/tags/Recursive-Function.json"}],"author":{"name":"Latte","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"최근에는 바닐라 라떼가 가장 좋습니다.","socials":{"github":"https://github.com/dev-latte","twitter":"https://twitter.com/dev_latte","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"mail":{"icon":"fas fa-envelope","link":null}}}},"feature":true},"next_post":{"title":"9. JPA Auditing","uid":"cbd579b642610e229f2314ec50cc2bc8","slug":"springboot-web-10","date":"2021-07-10T05:31:52.000Z","updated":"2021-07-10T06:22:41.952Z","comments":true,"path":"api/articles/springboot-web-10.json","keywords":"Programming, JAVA, JS, Spring MVC/Boot, React","cover":"../images/main.png","text":"JPA Auditing 으로 생성시간/수정시간 자동화하기보통 엔티티(Entity)는 해당 데이터의 생성 시간과 수정 시간을 반드시 갖고 있습니다.언제 만들어졌는지, 언제 수정되었는지 등의 정보는 차후 유지 보수에 있어 굉장히 중요한 정보이기 때문입니다...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"스프링 부트와 AWS로 혼자 구현하는 웹 서비스","slug":"스프링-부트와-AWS로-혼자-구현하는-웹-서비스","count":10,"path":"api/categories/스프링-부트와-AWS로-혼자-구현하는-웹-서비스.json"}],"tags":[{"name":"springBoot","slug":"springBoot","count":10,"path":"api/tags/springBoot.json"},{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"JPA Auditing","slug":"JPA-Auditing","count":1,"path":"api/tags/JPA-Auditing.json"}],"author":{"name":"Latte","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"최근에는 바닐라 라떼가 가장 좋습니다.","socials":{"github":"https://github.com/dev-latte","twitter":"https://twitter.com/dev_latte","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"mail":{"icon":"fas fa-envelope","link":null}}}},"feature":true}}